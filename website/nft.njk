---
layout: layouts/base.njk
pagination:
  data: nfts
  size: 1
  alias: nft
permalink: "collection/nft-{{ nft.name }}.html"
---
<script type="module" async>
  import {ethers} from "/js/ethers.js";
  import {abi} from "/js/identity-contract.js";
  import {abi as nftAbi} from "/js/nft-abi.js";

  document.getElementById("modalText").innerHTML = "Connecting to MetaMask...";
  const nftContractAddress = "0x81649691d1ec1c168825E7fd5342DeA3d5A9A40A";

  let provider;
  let contract;
  var isMinted;
  const id = window.location.href.split('-').pop().split('.')[0];


  if (window.ethereum) {
    provider = new ethers.providers.Web3Provider(window.ethereum, "any");
    await provider.send('eth_requestAccounts', []);
    let signer = await provider.getSigner();
    contract = new ethers.Contract(nftContractAddress, nftAbi, provider);
    isMinted = await contract.connect(signer)['isMinted'](id);
    if (isMinted === 1) {
      let soldOut = document.getElementById("sold_out");
      soldOut.removeAttribute("hidden");
    }
    else if (isMinted === 2) {
      let reserved = document.getElementById("reserved");
      reserved.removeAttribute("hidden");
    }
  }

  async function mint() {
    if (!window.ethereum) {
      alert('Metamask not found, please install it');
      return
    }
    const chainId = await window.ethereum.request({ method: 'eth_chainId' });
    if (chainId != 5) {
      await window.ethereum.request({
        method: 'wallet_switchEthereumChain',
        params: [{ chainId: '0x5' }],
      });
    }

    await window.ethereum.send('eth_requestAccounts');
    let provider = new ethers.providers.Web3Provider(window.ethereum, "any");// any needed to allow network changes
    document.getElementById("modalText").innerHTML = "Verifying the wallet...";

    isAddressKnown(provider).then(async resp => {
        if (resp == true) {
          document.getElementById("modalText").innerHTML = "Minting the NFT";
          const signer = provider.getSigner();
          const contract = new ethers.Contract(nftContractAddress, nftAbi, provider);
          try {
            const result = await contract.connect(signer)['mint'](id,
              {
                value: 5000000000000000,
                gasLimit: 10000000,
                nonce: undefined,
              })
            try {
              const ret = await result.wait()
              document.getElementById("modalText").innerHTML = "NFT successfully minted";
              let reserved = document.getElementById("reserved");
              reserved.removeAttribute("hidden");

            } catch (error) {
              console.error(error);
              document.getElementById("modalText").innerHTML = "Minting unsuccessfull";
            }
          } catch (error) {
            modal.style.display = "none";
          }
        }
        else {
          document.getElementById("modalText").innerHTML = "<p> It appears your metamask address is un-known<p>" +
            "<p> you will be redirected to Proofi for your registration </p>" ;
          await delay(2000);
          window.open(`http://localhost:4200/accounts/participate?redirectUrl=${encodeURIComponent(window.location.href)}`,"_self")
        }
      }
    );
  }

  function delay(milliseconds){
    return new Promise(resolve => {
      setTimeout(resolve, milliseconds);
    });
  }

  async function isAddressKnown(provider) {
    const contractAddress = '0xbBA38836dca7173a4B66D24E48dd0993b0d9Bf17';
    const signer = provider.getSigner();
    const address = await signer.getAddress();
    const contract = new ethers.Contract(contractAddress, abi, provider);
    return contract['isKnown'](address).then((resp) => {
      return resp;
    }).
    catch((error) => {
      console.log(error);
      return false;
    })
  }

  var modal = document.getElementById("myModal");

  // Get the button that opens the modal
  var btn = document.getElementById("myBtn");


  // Get the <span> element that closes the modal
  var span = document.getElementsByClassName("close")[0];

  // When the user clicks the button, open the modal
  btn.onclick = function() {
    if (isMinted !== 0) {
      return;
    }
    modal.style.display = "block";
    mint();
  }

  // When the user clicks on <span> (x), close the modal
  span.onclick = function() {
    modal.style.display = "none";
  }

  // When the user clicks anywhere outside of the modal, close it
  // window.onclick = function(event) {
  //   if (event.target == modal) {
  //     modal.style.display = "none";
  //   }
  // }
</script>

<div class="metaportal_fn_mintpage">

  <div class="container small">

    <input type="hidden" id="hiddenVar"/>

    <!-- Mint Top -->
    <div class="metaportal_fn_mint_top">
      <div style="position: relative">
        <div class="mint_left">
          <div class="img" >
            <div class="img_in" data-bg-img='https://ipfs.krazykobe.com/ipfs/QmdYSTJEnRyjMtuXpE2PeC9M2jA91UYigcmx49fguxQZUt/{{ nft.name}}.jpg'>
              <div>
                <img src='https://ipfs.krazykobe.com/ipfs/QmdYSTJEnRyjMtuXpE2PeC9M2jA91UYigcmx49fguxQZUt/{{ nft.name }}.jpg' alt=''>
              </div>
            </div>
          </div>
        </div>
{#        <img class="mint_left" id="sold_out" src="https://ipfs.krazykobe.com/ipfs/QmYUqng7Ccmni7uTnumNF5v5wkQZA9w3CEuJfQQ2tSic8R/sold-out.png" alt="" hidden>#}
        <img class="mint_left" id="sold_out" src="/img/sold-out.png" alt="" hidden>
        <img class="mint_left" id="reserved" src="/img/reserved.png" alt="" hidden>
      </div>
      <div class="mint_right">
        <div class="metaportal_fn_share">
          <h5 class="label">Share:</h5>
          <ul>
            <li><a href="#"><img src="/svg/social/twitter-1.svg" alt="" class="fn__svg"></a></li>
            <li><a href="#"><img src="/svg/social/facebook-1.svg" alt="" class="fn__svg"></a></li>
            <li><a href="#"><img src="/svg/social/instagram-1.svg" alt="" class="fn__svg"></a></li>
            <li><a href="#"><img src="/svg/social/pinterest-1.svg" alt="" class="fn__svg"></a></li>
            <li><a href="#"><img src="/svg/social/behance-1.svg" alt="" class="fn__svg"></a></li>
          </ul>
        </div>
<!--              <h3 class="fn__maintitle" data-text="Krazy Kobe" data-align="left" id="kkTitle">-->
          <h3 class="fn__maintitle" data-align="left">
              Krazy Kobe {{ nft.name }}
          </h3>
        <div class="view_on">
          <ul>
            <li>
              <span>View On:</span>
            </li>
            <li>
              <a href="https://opensea.io/" target="_blank"><img src="/svg/opensea.svg" alt="" class="fn__svg"></a>
            </li>

          </ul>
        </div>
        <a  class="metaportal_fn_button" id="myBtn">Mint Now</a>

        <!-- The Modal -->
        <div id="myModal" class="modal">

          <!-- Modal content -->
          <div class="modal-content">
            <span class="close">&times;</span>
            <p id="modalText">Some text in the Modal..</p>
          </div>

        </div>

        <div class="mint_desc">
          <p>By clicking “MINT NOW” button, you agree to our <a href="/documents/terms-and-conditions.pdf" target="_blank">Terms of Service</a> and our <a href="/documents/privacy-policy.pdf" target="_blank">Privacy Policy</a>.</p>
        </div>
      </div>

    </div>
    <!-- !Mint Top -->


    <!-- NFT Categories -->
    <div class="metaportal_fn_nft_cats">
      <ul>
        <li>
          <div class="item">
            <h4 class="parent_category" >Image</h4>
            <h3 class="child_category" title="Image" id="nftImage"> {{ nft.property1 }}</h3>
          </div>
        </li>
        <li>
          <div class="item">
            <h4 class="parent_category">Body</h4>
            <h3 class="child_category" title="Body" id="nftBody"> {{ nft.property2 }}</h3>
          </div>
        </li>
        <li>
          <div class="item">
            <h4 class="parent_category">Type</h4>
            <h3 class="child_category" title="Type" id="nftType"> {{ nft.property3 }}</h3>
          </div>
        </li>
      </ul>
    </div>
  </div>


</div>
